1. Write out a generic SELECT statement.

    SELECT column_name
    FROM table_name
    (optional) WHERE search_terms

2. Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.

    SELECT FROM WHERE?

3. Create a pets database. Create a dogs table using this file. From the dogs table with the columns id, name, gender, age, weight, intake_date,
    breed, and in_foster, write statements to select the following pieces of data.

        Display the name, gender, and age of all dogs that are part Labrador.

            dogs=# SELECT name, gender, age FROM dogs WHERE breed LIKE '%labrador%';
              name  | gender | age
            --------+--------+-----
             Boujee | F      |   3
             Marley | M      |   0

        Display the ids of all dogs that are under 1 year old.

            dogs=# SELECT id FROM dogs WHERE age < 1;
              id
            -------
             10002
             10004

        Display the name and age of all dogs that are female and over 35lbs.

            dogs=# SELECT name, age FROM dogs WHERE gender = 'F' AND weight > 35;
              name  | age
            --------+-----
             Boujee |   3

        Display all of the information about all dogs that are not Shepherd mixes.

            dogs=# SELECT * FROM dogs WHERE breed NOT LIKE '%shepherd%';
              id   |   name    | gender | age | weight |       breed        | intake_date | in_foster
            -------+-----------+--------+-----+--------+--------------------+-------------+------------
             10001 | Boujee    | F      |   3 |     36 | labrador poodle    | 2017-06-22  |
             10002 | Munchkin  | F      |   0 |      8 | dachsund chihuahua | 2017-01-13  | 2017-01-31
             10004 | Marley    | M      |   0 |     10 | labrador           | 2017-05-04  | 2016-06-20
             10006 | Marmaduke | M      |   7 |    150 | great dane         | 2016-03-22  | 2016-05-15
             10007 | Rosco     | M      |   5 |    180 | rottweiler         | 2017-04-01  |

        Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.

            dogs=# SELECT id, age, weight, breed FROM dogs WHERE weight > 60 OR breed LIKE '%great dane%';
              id   | age | weight |   breed
            -------+-----+--------+------------
             10006 |   7 |    150 | great dane
             10007 |   5 |    180 | rottweiler

4. From the cats table below, what pieces of data would be returned from these queries?

        SELECT name, adoption_date FROM cats;

            name        |   adoption_date
            Mushi       |   2016-03-22
            Seashell    |   
            Azul        |   2016-04-17
            Victoire    |   2016-09-01
            Nala        |

        SELECT name, age FROM cats;

            name        |   age
            Mushi       |   1
            Seashell    |   7
            Azul        |   3
            Victoire    |   7
            Nala        |   1

5. From the cats table, write queries to select the following pieces of data.

        Display all the information about all of the available cats.

            SELECT * FROM cats;

        Choose one cat of each age to show to potential adopters.

            SELECT * FROM cats WHERE gender = 'F' OR age = 3;

        Find all of the names of the cats, so you don’t choose duplicate names for new cats.

            SELECT name FROM cats;

6. List each comparison operator and explain, in your own words, when you would use it. Include a real world example for each.
        If you can’t list these from memory, do these flashcards until you can!

            > (Greater Than) - When you want to find a value higher than something (age > 3).
            >= (Greather Than or Equal To) - When you want to find a value higher than or equal to a value (id >= 0001).
            < (Less Than) - When you want to find a value lower than something (calories < 500).
            <= (Less Than or Equal To) - Find a value lower than or equal to another value (price <= 50).
            = (Equal To) - When you want to match a value exactly (name = 'John Wick').
            != or <> (Not Equal To) - When you want to find every value that does not match (name != 'Teletubies').

7. From the cats table below, what data would be returned from these queries?

        SELECT name FROM cats WHERE gender = ‘F’;

            name
            Seashell
            Nala

        SELECT name FROM cats WHERE age <> 3;

            name
            Mushi
            Seashell
            Victoire
            Nala

        SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;

            id
            00003
            00004