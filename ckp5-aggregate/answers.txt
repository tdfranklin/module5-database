1. List 5 aggregate functions and explain, in your own words, what they are for. Include a real world example for each.

        1. MIN - Will return the smallest number in the specified column.
        2. MAX - Will return the largest number in the specified column.
        3. SUM - Will add all the numbers together and return the result.
        4. LIMIT 'number' - Will return the first 'number' results in query.
        5. ORDER BY - Will order results.  Is ASC by default but can put DESC at end to reverse.

2. Create a database called iron-bank-foundation. Create a donations table, and import CSV data from this file. Select the following data from the table:

    Find the total of all donations received in the past year.

        iron-bank-foundation=# SELECT SUM(amount) FROM donations;
         sum
        -----
         993
        (1 row)

    Find the total donations over time per donor. (i.e. Tanysha has donated 3 times with the amounts $25, $30, and $50. Her total is $105. )

        iron-bank-foundation=# SELECT donor, SUM(amount) AS total FROM donations GROUP BY donor;
           donor    | total
        ------------+-------
         Samwell    |    20
         Daario     |    10
         Brienne    |    75
         Tyrion     |   120
         Petyr      |    70
         Melisandre |    45
         Bran       |    25
         Tormund    |    50
         Ygritte    |    30
         Gilly      |     7
         Jon        |    25
         Arya       |    60
         Theon      |    20
         Bronn      |    20
         Margaery   |   120
         Missandei  |    90
         Sansa      |    33
         Daenerys   |   173
        (18 rows)

    What is the average donation per donor?

        iron-bank-foundation=# SELECT AVG(amount) FROM donations;
         avg
        ---------------------
         36.7777777777777778
        (1 row)

    How many donations over $100 have been received?

        iron-bank-foundation=# SELECT COUNT(amount) FROM donations WHERE amount > 100;
         count
        -------
             2
        (1 row)

    What is the largest donation received in a single instance from a single donor?

        iron-bank-foundation=# SELECT donor, amount FROM donations ORDER BY amount DESC LIMIT 1;
          donor   | amount
        ----------+--------
         Margaery |    120
        (1 row)

    What is the smallest donation we’ve received?

         donor | amount
        -------+--------
         Theon |      5
        (1 row)


3. How would you determine the display order of data returned by your SELECT statement?

        ORDER BY column ASC/DESC

4. What is a real world situation where you would use OFFSET?

        For an Email application or shop/store where you may want to pull items 25-50 when the user clicks on the 2nd page.

5. Why is it important to use ORDER BY when limiting your results?

        So that you get an ordered list (either high or low or low to high) of items.  If you don't sort first, you would just get random items.

6. What is the difference between HAVING and WHERE?

        HAVING happens after aggregations occur.

7. Correct the following SELECT statement:

    SELECT id, SUM (amount)
    FROM payment
    HAVING SUM (amount) > 200;

        SELECT id, SUM(amount) AS sum
        FROM payment
        HAVING sum > 200;

8. Write queries to retrieve the following information.

    From the cats table, list all cats organized by intake date.

        SELECT *
        FROM cats
        ORDER BY intake_date;

    Given an adoptions table with the columns id, date, adopter, cat, and fee, determine the 5 most recent adoptions to be featured as “Happy Tails” on social media.

        SELECT *
        FROM adoptions
        ORDER BY date DESC
        LIMIT 5;

    There is a potential adopter looking for an adult female cat. In the most efficient way possible, from the Cats table, list all female cats 2 or more years old.

        SELECT *
        FROM cats
        WHERE gender = 'F' AND age >= 2;

    From the donations table (described in problem #2), find the top 5 donors with the highest cumulative donation amounts to be honored as “Platinum Donors”.

        SELECT donor, SUM(amount) AS total
        FROM donations
        GROUP BY donor
        ORDER BY total DESC
        LIMIT 5;

    From the donations table (described in problem #2), find donors 6-15 with the next highest cumulative donation amounts to be honored as “Gold Donors”.

        SELECT donor, SUM(amount) AS total
        FROM donations
        GROUP BY donor
        ORDER BY total DESC
        LIMIT 10 OFFSET 5;